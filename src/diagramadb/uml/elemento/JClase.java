/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJPanel.java
 *
 * Created on 22/05/2011, 19:56:50
 */
package diagramadb.uml.elemento;


import java.util.LinkedList;
import java.util.List;
import java.util.Vector;



/**
 * 
 *
 * @author Administrador
 */
public class JClase extends javax.swing.JPanel {
    public static final String PROTECTED = "#";
    public static final String PRIVATE = "-";
    public static final String PUBLIC = "+";

    /** Creates new form NewJPanel */
    public JClase() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNombre = new javax.swing.JLabel();
        scrollUp = new javax.swing.JScrollPane();
        listAtributos = new javax.swing.JList();
        scroolDown = new javax.swing.JScrollPane();
        listMetodos = new javax.swing.JList();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.BorderLayout());

        labelNombre.setBackground(new java.awt.Color(255, 255, 255));
        labelNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNombre.setText("Title");
        labelNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(labelNombre, java.awt.BorderLayout.NORTH);

        scrollUp.setBackground(new java.awt.Color(255, 255, 255));
        scrollUp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrollUp.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollUp.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        listAtributos.setSelectionBackground(new java.awt.Color(51, 51, 51));
        scrollUp.setViewportView(listAtributos);
        listAtributos.getAccessibleContext().setAccessibleParent(this);

        add(scrollUp, java.awt.BorderLayout.CENTER);

        scroolDown.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scroolDown.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroolDown.setToolTipText("");
        scroolDown.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        scroolDown.setPreferredSize(new java.awt.Dimension(258, 20));

        listMetodos.setSelectionBackground(new java.awt.Color(102, 102, 102));
        scroolDown.setViewportView(listMetodos);
        listMetodos.getAccessibleContext().setAccessibleParent(scrollUp);

        add(scroolDown, java.awt.BorderLayout.PAGE_END);
        scroolDown.getAccessibleContext().setAccessibleParent(scrollUp);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelNombre;
    private javax.swing.JList listAtributos;
    private javax.swing.JList listMetodos;
    private javax.swing.JScrollPane scrollUp;
    private javax.swing.JScrollPane scroolDown;
    // End of variables declaration//GEN-END:variables

    public void setCell(Clase cell) {
      labelNombre.setText(cell.getNombre());
      listAtributos.removeAll();
        List<Atributo> atributos = cell.getAtributos();
        List<String> v = new LinkedList<>();
        for (int i = 0; i < atributos.size(); i++) {
            String visib = PRIVATE ;
            if(atributos.get(i).getVisibilidad() == VisibilidadEnum.PROTECTED){ visib= PROTECTED;}    
            else if(atributos.get(i).getVisibilidad() == VisibilidadEnum.PUBLIC){ visib= PUBLIC; }    
            
          v.add( "  "+visib+"  "+atributos.get(i).toString());
        }
        if (cell.getAtributos().size() > 0) {
            listAtributos.setListData(v.toArray());
        }
      
    }

  /*  public void setCell(TClase cell) {        
        labelNombre.setText(cell.getNombre());
        if (cell.getAtributos().size() > 0) {
            listAtributos.setListData(cell.getAtributos().toArray());
        }
        if (cell.getMetodos().size() > 0) {
            listMetodos.setListData(cell.getMetodos().toArray());
        }

    }*/
}
